let DOMcanvas,DOMcanvasBuffer,DOMcanvasSprite;let ctx,ctxBuffer,ctxSprite;let volume=3;let mousex=0;let mousey=0;let sprites=[];let loadedSprites=[];let allSpritesLoaded=!1;let currentSprite=0;let audio=[];let loadedAudio=[];let allAudioLoaded=!1;let currentAudio=0;let gifs=[];let loadedGifs=[];let allGifsLoaded=!1;let currentGif=0;let fonts=new Map();let allFontsLoaded=!1;let loadedFonts=[];function checkLoadAssets(){if(!allSpritesLoaded){allSpritesLoaded=!0;for(var n=0;n<sprites.length;n++){if(loadedSprites[n]==!1){allSpritesLoaded=!1;break}}}
if(!allAudioLoaded){allAudioLoaded=!0;for(var n=0;n<audio.length;n++){if(loadedAudio[n]==!1){allAudioLoaded=!1;break}}}
if(!allGifsLoaded){allGifsLoaded=!0;for(var n=0;n<gifs.length;n++){if(loadedGifs[n]==!1){allGifsLoaded=!1;break}}}
if(!allFontsLoaded){allFontsLoaded=!0;for(var n=0;n<fonts.length;n++){if(loadedFonts[n]==!1){allFontsLoaded=!1;break}}}}
function setupCanvas(){ctx=DOMcanvas.getContext("2d");ctx.fillStyle="#000000";ctx.font="bold 13px Courier New";ctx.textAlign="center";DOMcanvasBuffer=document.createElement("canvas");DOMcanvasBuffer.id="bufferCanvas";DOMcanvasBuffer.width=DOMcanvas.width;DOMcanvasBuffer.height=DOMcanvas.height;document.body.appendChild(DOMcanvasBuffer);ctxBuffer=DOMcanvasBuffer.getContext("2d");ctxBuffer.fillStyle="#000000";ctxBuffer.font="bold 13px Courier New";ctxBuffer.textAlign="center";DOMcanvasSprite=document.createElement("canvas");DOMcanvasSprite.id="spriteCanvas";DOMcanvasSprite.width=DOMcanvas.width;DOMcanvasSprite.height=DOMcanvas.height;document.body.appendChild(DOMcanvasSprite);ctxSprite=DOMcanvasSprite.getContext("2d");ctxSprite.webkitImageSmoothingEnabled=!1;ctxSprite.msImageSmoothingEnabled=!1;ctxSprite.imageSmoothingEnabled=!1}
function addPadding(input,char,length){let output=input.toString();while(output.length<length){output=char+output}
return output}
function hexToRgb(color){var shorthandRegex=/^#?([a-f\d])([a-f\d])([a-f\d])$/i;color=color.replace(shorthandRegex,function(m,r,g,b){return r+r+g+g+b+b});var result=/^#?([a-f\d]{2})([a-f\d]{2})([a-f\d]{2})$/i.exec(color);return result?{r:parseInt(result[1],16),g:parseInt(result[2],16),b:parseInt(result[3],16)}:{r:0,g:0,b:0}}
function updateVolume(){for(let i=0;i<audio.length;i++){audio[i].volume=(volume!=0)?0.33*volume:0}}
function loadSprite(path){sprites[currentSprite]=new Image();loadedSprites[currentSprite]=!1;sprites[currentSprite].src=path;sprites[currentSprite].onload=function(){loadedSprites[sprites.indexOf(this)]=!0};currentSprite++;return currentSprite-1};function loadAudio(path){audio[currentAudio]=new Audio(path);loadedAudio[currentAudio]=!1;audio[currentAudio].addEventListener("loadeddata",function(){loadedAudio[audio.indexOf(this)]=!0});currentAudio++;return currentAudio-1};class Text{static getTextWidth(text,font,size){let width=0;let fontShortcut=fonts.get(font);for(let i=0;i<text.length;i++){if(text[i]==" "){width+=fontShortcut.spaceWidth*size;continue}
width+=(fontShortcut.sprites.get(text[i]).z+fontShortcut.glyphSpacing)*size}
return width}
static loadFont(font,src,data){let thisFont=new TextFont(src);let xmlhttp=new XMLHttpRequest();xmlhttp.onreadystatechange=function(){if(this.readyState==4&&this.status==200){let myObj=JSON.parse(this.responseText);for(let i=0;i<myObj.glyphs.length;i++){thisFont.add(myObj.glyphs[i].glyph,myObj.glyphs[i].x,myObj.glyphs[i].y,myObj.glyphs[i].width,myObj.glyphs[i].height)}
thisFont.glyphSpacing=myObj.glyphSpacing;thisFont.breakHeight=myObj.breakHeight;thisFont.lineHeight=myObj.lineHeight;thisFont.spaceWidth=myObj.spaceWidth}};xmlhttp.open("GET",data,!0);xmlhttp.send();fonts.set(font,thisFont)}
static drawText(text,x,y,font,colour,size){let offsetX=0;let offsetY=0;let fontShortcut=fonts.get(font);for(let i=0;i<text.length;i++){if(text[i]=="\\"&&text[i+1]=="n"){offsetX=0;offsetY+=(fontShortcut.lineHeight+fontShortcut.breakHeight)*size;i+=1;continue}else if(text[i]==" "){offsetX+=fontShortcut.spaceWidth*size;continue}
let spriteShortcut=fontShortcut.sprites.get(text[i]);if(spriteShortcut!==undefined){ctxSprite.drawImage(fontShortcut.source,spriteShortcut.x,spriteShortcut.y,spriteShortcut.z,spriteShortcut.w,x+offsetX,y+offsetY,spriteShortcut.z*size,spriteShortcut.w*size)}else{console.log("Glyph missing: "+text[i]);break}
offsetX+=(spriteShortcut.z+fontShortcut.glyphSpacing)*size}
var spriteData=ctxSprite.getImageData(0,0,DOMcanvasSprite.width,DOMcanvasSprite.height);var data=spriteData.data;for(var p=0;p<data.length;p+=4){data[p+0]=colour.r;data[p+1]=colour.g;data[p+2]=colour.b}
ctxSprite.putImageData(spriteData,0,0);ctxBuffer.drawImage(DOMcanvasSprite,0,0);ctxSprite.clearRect(0,0,DOMcanvasSprite.width,DOMcanvasSprite.height)}}
class TextFont{constructor(src){this.source=new Image();this.source.src=src;this.sprites=new Map();this.glyphSpacing=0;this.breakHeight=0;this.lineHeight=0;this.spaceWidth=0};add(glyph,offsetx,offsety,width,height){this.sprites.set(glyph,new Vector4(offsetx,offsety,width,height))}}
class AnimatedGif{constructor(){this.frames=[];this.loadedFrames=[];this.timing=[];this.curTiming=0;this.curFrame=0;this.isPlaying=!1;this.transform=new Vector4()}
loadFramesSpecific(frames,timing){this.timing=timing;gifs[currentGif]=this;loadedGifs[currentGif]=!1;for(let i=0;i<frames.length;i++){this.frames[i]=new Image();this.frames[i].src=frames[i];this.loadedFrames[i]=!1;this.frames[i].onload=(e)=>{this.loadedFrames[this.frames.indexOf((e.target==null)?e.path[0]:e.target)]=!0;if(frames.length==this.loadedFrames.length){let hasFailed=!1;for(let n=0;n<this.loadedFrames.length;n++){if(this.loadedFrames[n]==!1){hasFailed=!0;break}}
if(!hasFailed){loadedGifs[gifs.indexOf(this)]=!0}}}}
currentGif++}
loadFrames(path,amount,fileType,timing){this.timing=timing;gifs[currentGif]=this;loadedGifs[currentGif]=!1;for(let i=0;i<amount;i++){this.frames[i]=new Image();this.frames[i].src=path+"_"+addPadding(i+1,'0',2)+"."+fileType;this.loadedFrames[i]=!1;this.frames[i].onload=(e)=>{this.loadedFrames[this.frames.indexOf((e.target==null)?e.path[0]:e.target)]=!0;if(amount==this.loadedFrames.length){let hasFailed=!1;for(let n=0;n<this.loadedFrames.length;n++){if(this.loadedFrames[n]==!1){hasFailed=!0;break}}
if(!hasFailed){loadedGifs[gifs.indexOf(this)]=!0}}}}
currentGif++}
setTransform(x,y,width,height){this.transform=new Vector4(x,y,width,height)}
start(){this.isPlaying=!0}
stop(){this.isPlaying=!1}
reset(){this.curFrame=0;this.curTiming=this.timing[0]}
update(){if(this.transform.z!==-1&&this.transform.w!==-1){ctxBuffer.drawImage(this.frames[this.curFrame],this.transform.x,this.transform.y,this.transform.z,this.transform.w)}else{ctxBuffer.drawImage(this.frames[this.curFrame],this.transform.x,this.transform.y)}
if(this.isPlaying){if(this.curTiming<=0){if(this.curFrame<this.frames.length-1){this.curFrame++}else{this.curFrame=0}
this.curTiming=this.timing[this.curFrame]}else{this.curTiming--}}}}
class Interactable{constructor(x,y,width,height){this.transform=new Vector4(x,y,width,height)};check(){if(mousex>=this.transform.x&&mousex<=this.transform.x+this.transform.z&&mousey>=this.transform.y&&mousey<=this.transform.y+this.transform.w){return!0}
return!1}}
function Vector4(x,y,z,w){this.x=x;this.y=y;this.z=z;this.w=w}